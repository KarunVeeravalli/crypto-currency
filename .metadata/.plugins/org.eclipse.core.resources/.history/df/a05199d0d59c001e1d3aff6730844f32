package com.cc.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.cc.dto.PasswordChangeDto;
import com.cc.dto.UsersDto;
import com.cc.entity.Users;
import com.cc.exception.UsersException;
import com.cc.service.UsersService;
import com.cc.utilityHelper.GeneralResponse;

@RestController
@RequestMapping("/user")
public class UserController {
	
	@Autowired
	UsersService service;
	
	
	@GetMapping("/getUser/{id}")
	public ResponseEntity<GeneralResponse> getUser(@PathVariable Integer id) throws UsersException{
		GeneralResponse generalResponse = new GeneralResponse();
		generalResponse.setMessage("User was Found by user Id: "+id);
		generalResponse.setData(service.getUser(id));
		return ResponseEntity.ok(generalResponse);
	}
	
	@PostMapping("/addUser")
	public ResponseEntity<GeneralResponse> addUser(@RequestBody UsersDto dto) throws UsersException{
		GeneralResponse generalResponse = new GeneralResponse();
		generalResponse.setMessage(dto.getFirstname()+" was added");
		generalResponse.setData(service.addUser(dto));
		return ResponseEntity.ok(generalResponse);
	}
	
	@PutMapping("/updateUser/{id}")
	public ResponseEntity<GeneralResponse> updateUser(@RequestBody UsersDto newUserDetails,@PathVariable Integer id) throws UsersException{
		GeneralResponse generalResponse = new GeneralResponse();
		generalResponse.setMessage("User was Found by user Id: "+id);
		generalResponse.setData(service.getUser(id));
		return ResponseEntity.ok(generalResponse);
		return service.updateUser(newUserDetails, id);
	}
	
	@DeleteMapping("/deleteUser/{id}")
	public ResponseEntity<GeneralResponse> deleteUser(@PathVariable Integer id) throws UsersException{
		GeneralResponse generalResponse = new GeneralResponse();
		generalResponse.setMessage("User was Found by user Id: "+id);
		generalResponse.setData(service.getUser(id));
		return ResponseEntity.ok(generalResponse);
		return service.deleteUser(id);
	}
	
	@GetMapping("/getAllUsers")
	public ResponseEntity<GeneralResponse> getAllUsers() throws UsersException{
		GeneralResponse generalResponse = new GeneralResponse();
		generalResponse.setMessage("User was Found by user Id: "+id);
		generalResponse.setData(service.getUser(id));
		return ResponseEntity.ok(generalResponse);
		return service.getAllUsers();
	}
	
	@PutMapping("/changePassword/{id}")
	public Users changePassword(@RequestBody PasswordChangeDto dto,@PathVariable Integer id) throws UsersException{
		GeneralResponse generalResponse = new GeneralResponse();
		generalResponse.setMessage("User was Found by user Id: "+id);
		generalResponse.setData(service.getUser(id));
		return ResponseEntity.ok(generalResponse);
		return service.changePassword(dto, id);
	}
	
	
}

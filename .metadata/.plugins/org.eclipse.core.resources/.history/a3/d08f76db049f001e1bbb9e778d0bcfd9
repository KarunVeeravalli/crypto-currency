package com.cc.service;

import java.time.LocalDateTime;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.cc.dto.RegistrationDto;
import com.cc.entity.UnAuthUser;
import com.cc.exception.AdminException;
import com.cc.exception.UnAuthUserException;
import com.cc.repository.UnAuthUserRepository;

@Service
public class UnAuthUserServiceImpl implements UnAuthUserService{
	
	@Autowired
	UnAuthUserRepository repository;

	@Override
	public UnAuthUser addUnAuthUser(RegistrationDto user) throws UnAuthUserException {
		user.setStatus("PENDING");
		user.setCreatedAt(LocalDateTime.now());
		return repository.save(user);
	}

	@Override
	public UnAuthUser getUnAuthUserById(Integer id) throws UnAuthUserException {
		return repository.findById(id).orElseThrow(()->new UnAuthUserException("User is not found with id: "+id));
	}

	@Override
	public UnAuthUser getUnAuthUserByEmail(String mail) throws UnAuthUserException {
		return repository.findByEmail(mail);
	}

	@Override
	public List<UnAuthUser> getUnauAuthUserByStatus(String status) throws UnAuthUserException, AdminException {
		return repository.findAllByStatus(status);
	}

	@Override
	public UnAuthUser deleteUnAuthUserById(Integer id) throws UnAuthUserException {
		UnAuthUser user = getUnAuthUserById(id);
		repository.deleteById(id);
		return user;
	}

	@Override
	public UnAuthUser rejectUserById(Integer id) throws UnAuthUserException {
		UnAuthUser user = getUnAuthUserById(id);
		user.setStatus("REJECTED");
		return user;
	}

}

package com.cc.service;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.cc.entity.Coin;
import com.cc.entity.CoinWallet;
import com.cc.exception.CoinException;
import com.cc.exception.CoinWalletException;
import com.cc.exception.UserException;
import com.cc.exception.WalletException;
import com.cc.repository.CoinWalletRepository;

@Service
public class CoinWalletServiceImpl implements CoinWalletService{
	@Autowired
	CoinWalletRepository repository;

	@Override
	public CoinWallet addCryptoCoinsToWalletByQuantity(Integer userId, Integer cryptoId, Integer quantity)
			throws CoinException, CoinWalletException, UserException, WalletException {
		CoinWallet coinWallet = getCoinWalletByUserId(userId);
		List<Coin> walletCoins =  coinWallet.getCoins();
		//Coin crypto = cryptoRepo.getById(cryptoId);
		//here we have to add
		Coin coin = new Coin();
		if(coin.getQuantity()>=quantity) {
			//Users users = usersRepo.getById(userId);
			//here also changes need
//			if(users.getWallet().getAvailableAmount()>=crypto.getCurrentCryptoValue()) {
//				cryptoWallet.getCryptos().add(crypto);
//				users.getWallet().setAvailableAmount(users.getWallet().getAvailableAmount()-crypto.getCurrentCryptoValue());
//				return cryptoWalletRepo.save(cryptoWallet);
//
//			}
			throw new WalletException("Insufficient Funds");
		}
		throw new CoinException("Insufficient Coins");
	}

	@Override
	public CoinWallet getCoinWalletByUserId(Integer userId) throws CoinWalletException, UserException {
		
		return repository.findByUserId(userId);
	}

	@Override
	public CoinWallet getCoinWallet(Integer coinWalletId) throws CoinWalletException, UserException {
		return repository.findById(coinWalletId).orElseThrow(()->new CoinWalletException("Coin Wallet not found with id: "+coinWalletId));
	}

	@Override
	public CoinWallet deleteCoinWallet(Integer coinWalletId) throws CoinWalletException, UserException {
		CoinWallet coinWallet = getCoinWallet(coinWalletId);
		repository.deleteById(coinWalletId);
		return coinWallet;
	}

	@Override
	public CoinWallet deleteCryptoCoinsFromWalletByQuantity(Integer coinId, Double quantity)
			throws CoinException, CoinWalletException, UserException {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public CoinWallet deleteCryptoCoinsFromWalletByAmount(Integer coinId, Double amount)
			throws CoinException, CoinWalletException, UserException {
		return null;
	}

}
